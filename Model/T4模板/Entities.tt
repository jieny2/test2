<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<# /* 导入MultipleOutputHelper.ttinclude文件 */ #>
<#@ include file="MultipleOutputHelper.ttinclude" #>
<#
    string connectionString = string.Empty;
	//connectionString = "Data Source=192.168.1.98;Initial Catalog=XXX;User ID=db;Password=db123456.;";
	connectionString = "Data Source=.;Initial Catalog=XXX;User ID=db;Password=db123456.;";
	SqlConnection conn = new SqlConnection(connectionString);
    conn.Open();

	string sql =
	@"
		SELECT * FROM @tableName;
		SET FMTONLY OFF;
		SELECT a.name AS table_name,
			   b.name AS column_name,
			   c.value AS column_description
		  FROM sys.tables AS a
			   INNER JOIN sys.columns AS b
				   ON b.object_id = a.object_id
			   LEFT JOIN sys.extended_properties AS c
				   ON c.major_id = b.object_id
					  AND c.minor_id = b.column_id
		 WHERE a.name = '@tableName';
	";
    SqlCommand cmd = new SqlCommand(sql, conn);
    SqlDataAdapter sda = new SqlDataAdapter(cmd);
    System.Data.DataSet ds = new DataSet(); 
  
    var manager = Manager.Create(Host, GenerationEnvironment);

    DataTable schema = conn.GetSchema("Tables");
    foreach (DataRow row in schema.Rows)
    {
        ds.Tables.Clear();
        string tb_name= row["TABLE_NAME"].ToString();
        cmd.CommandText = sql.Replace("@tableName", tb_name);
        sda.Fill(ds);

        manager.StartNewFile(tb_name + ".cs");
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//     生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by xyb_jieny
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace Entities
{
    /// <summary>
    /// 实体类（<#= tb_name #>）
    /// </summary>
    public partial class <#= tb_name #>
    {
<# 
		bool isFirst = true;
		foreach (DataColumn dc in ds.Tables[0].Columns)
		{
			if (!isFirst)
			{
				WriteLine(Environment.NewLine);
			}
			else
			{
				isFirst = false;
            }
			// 注释信息
			var desc = ds.Tables[1].Select("column_name = '" + dc.ColumnName + "'")[0]["column_description"].ToString();
			if (!string.IsNullOrEmpty(desc))
			{
				WriteLine(@"        /// <summary>" + Environment.NewLine + "        /// " + desc + Environment.NewLine + @"        /// </summary>");
			}
			Write("        public " + manager.DataTypeConvertToAliases(dc.DataType.Name) + (dc.AllowDBNull && !dc.DataType.Name.Equals("String") && !dc.DataType.Name.Contains("[") ? "? " : " ") + dc.ColumnName + " { get; set; }");
		}
		WriteLine("");
#>
	}
}
<#
		manager.EndBlock();
	}
	conn.Close();
	manager.Process(true);
#> 